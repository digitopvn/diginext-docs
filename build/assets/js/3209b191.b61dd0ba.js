"use strict";(self.webpackChunkdiginext=self.webpackChunkdiginext||[]).push([[7843],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>s});var i=n(9496);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=i.createContext({}),u=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return i.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),c=u(n),k=l,s=c["".concat(d,".").concat(k)]||c[k]||m[k]||r;return n?i.createElement(s,o(o({ref:t},p),{},{components:n})):i.createElement(s,o({ref:t},p))}));function s(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=k;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a[c]="string"==typeof e?e:l,o[1]=a;for(var u=2;u<r;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},6577:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>u});var i=n(7366),l=(n(9496),n(9613));const r={sidebar_position:2},o="CLI Documentation",a={unversionedId:"cli/cli-docs",id:"cli/cli-docs",title:"CLI Documentation",description:"server",source:"@site/docs/cli/cli-docs.md",sourceDirName:"cli",slug:"/cli/cli-docs",permalink:"/docs/cli/cli-docs",draft:!1,editUrl:"https://github.com/digitopvn/diginext-docs/tree/main/docs/cli/cli-docs.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"CLI Usage",permalink:"/docs/cli/cli-usage"},next:{title:"Create or initialize app",permalink:"/docs/cli/cli-learn-create-app"}},d={},u=[{value:"<code>server</code>",id:"server",level:2},{value:"<code>login</code>",id:"login",level:2},{value:"<code>logout</code>",id:"logout",level:2},{value:"<code>new</code>",id:"new",level:2},{value:"<code>init</code>",id:"init",level:2},{value:"<code>git</code>",id:"git",level:2},{value:"<code>domain</code>",id:"domain",level:2},{value:"<code>registry</code>",id:"registry",level:2},{value:"<code>cluster</code>",id:"cluster",level:2},{value:"<code>db</code>",id:"db",level:2},{value:"<code>kb</code>",id:"kb",level:2},{value:"<code>build</code>",id:"build",level:2},{value:"<code>run</code>",id:"run",level:2},{value:"<code>deploy</code>",id:"deploy",level:2},{value:"<code>rollout</code>",id:"rollout",level:2},{value:"<code>down</code>",id:"down",level:2},{value:"<code>dotenv</code>",id:"dotenv",level:2},{value:"<code>free</code>",id:"free",level:2},{value:"<code>update</code>",id:"update",level:2},{value:"<code>version</code>",id:"version",level:2},{value:"<code>help</code>",id:"help",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(c,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cli-documentation"},"CLI Documentation"),(0,l.kt)("h2",{id:"server"},(0,l.kt)("inlineCode",{parentName:"h2"},"server")),(0,l.kt)("p",null,"Sub-commands:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"up")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"down"))),(0,l.kt)("h2",{id:"login"},(0,l.kt)("inlineCode",{parentName:"h2"},"login")),(0,l.kt)("p",null,"Usage: ",(0,l.kt)("inlineCode",{parentName:"p"},"dx login <your-workspace-url>")),(0,l.kt)("h2",{id:"logout"},(0,l.kt)("inlineCode",{parentName:"h2"},"logout")),(0,l.kt)("p",null,"Usage: ",(0,l.kt)("inlineCode",{parentName:"p"},"dx logout")),(0,l.kt)("h2",{id:"new"},(0,l.kt)("inlineCode",{parentName:"h2"},"new")),(0,l.kt)("p",null,"Start new application from a starter framework."),(0,l.kt)("p",null,"Usage: ",(0,l.kt)("inlineCode",{parentName:"p"},"dx new")),(0,l.kt)("h2",{id:"init"},(0,l.kt)("inlineCode",{parentName:"h2"},"init")),(0,l.kt)("p",null,"Initialize app at a current working directory."),(0,l.kt)("p",null,"Usage: ",(0,l.kt)("inlineCode",{parentName:"p"},"dx init")),(0,l.kt)("h2",{id:"git"},(0,l.kt)("inlineCode",{parentName:"h2"},"git")),(0,l.kt)("p",null,"Sub-commands:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"login")," - login to your git provider","  Usage:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dx git login")," - Login to the git provider of current working directory, if there is no git providers detected, Github will be selected as default."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dx git login --github")," - Authenticate ",(0,l.kt)("inlineCode",{parentName:"li"},"dx")," CLI with Github"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dx git login --bitbucket")," - Authenticate ",(0,l.kt)("inlineCode",{parentName:"li"},"dx")," CLI with Bitbucket"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"logout")," - logout from all git providers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pr")," - create new pull request, alias ",(0,l.kt)("inlineCode",{parentName:"li"},"pullrequest"),"  Usage: ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dx git pr")," - create a pull request to ",(0,l.kt)("inlineCode",{parentName:"li"},"main")," branch"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dx git pr <destination-branch>")," - create a pull request from current branch to destination branch"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dx git pr <from-branch> <to-branch>")," - create a pull request from a branch to another")))),(0,l.kt)("h2",{id:"domain"},(0,l.kt)("inlineCode",{parentName:"h2"},"domain")),(0,l.kt)("p",null,"Sub-commands: "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("h2",{id:"registry"},(0,l.kt)("inlineCode",{parentName:"h2"},"registry")),(0,l.kt)("p",null,"Sub-commands:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("h2",{id:"cluster"},(0,l.kt)("inlineCode",{parentName:"h2"},"cluster")),(0,l.kt)("p",null,"Sub-commands:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("h2",{id:"db"},(0,l.kt)("inlineCode",{parentName:"h2"},"db")),(0,l.kt)("p",null,"Sub-commands:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("h2",{id:"kb"},(0,l.kt)("inlineCode",{parentName:"h2"},"kb")),(0,l.kt)("p",null,"Sub-commands:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("h2",{id:"build"},(0,l.kt)("inlineCode",{parentName:"h2"},"build")),(0,l.kt)("p",null,"Build and push current working app to the container registry from your computer."),(0,l.kt)("h2",{id:"run"},(0,l.kt)("inlineCode",{parentName:"h2"},"run")),(0,l.kt)("p",null,"Build and deploy current working app to deploy environment from your computer."),(0,l.kt)("h2",{id:"deploy"},(0,l.kt)("inlineCode",{parentName:"h2"},"deploy")),(0,l.kt)("p",null,"Request the Diginext Server to build and deploy current working app to deploy environment."),(0,l.kt)("h2",{id:"rollout"},(0,l.kt)("inlineCode",{parentName:"h2"},"rollout")),(0,l.kt)("p",null,"Roll out a release to production environment."),(0,l.kt)("h2",{id:"down"},(0,l.kt)("inlineCode",{parentName:"h2"},"down")),(0,l.kt)("p",null,"Take down an application from its deploy environment."),(0,l.kt)("h2",{id:"dotenv"},(0,l.kt)("inlineCode",{parentName:"h2"},"dotenv")),(0,l.kt)("p",null,"Sub-commands:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("h2",{id:"free"},(0,l.kt)("inlineCode",{parentName:"h2"},"free")),(0,l.kt)("p",null,"Free up your build server by cleaning up build cache and redundant container images."),(0,l.kt)("h2",{id:"update"},(0,l.kt)("inlineCode",{parentName:"h2"},"update")),(0,l.kt)("p",null,"Update the ",(0,l.kt)("inlineCode",{parentName:"p"},"dx")," CLI to latest version."),(0,l.kt)("h2",{id:"version"},(0,l.kt)("inlineCode",{parentName:"h2"},"version")),(0,l.kt)("p",null,"Print the current version of Diginext"),(0,l.kt)("h2",{id:"help"},(0,l.kt)("inlineCode",{parentName:"h2"},"help")))}m.isMDXComponent=!0}}]);