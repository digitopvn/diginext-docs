"use strict";(self.webpackChunkdiginext=self.webpackChunkdiginext||[]).push([[2240],{9613:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var a=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),m=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=m(t),d=r,h=u["".concat(l,".").concat(d)]||u[d]||c[d]||o;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var m=2;m<o;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var a=t(7366),r=(t(9496),t(9613));const o={sidebar_position:2},i="Server - With Kubernetes",s={unversionedId:"installation/server-with-kubernetes",id:"installation/server-with-kubernetes",title:"Server - With Kubernetes",description:"Take one of these example Kubernetes deployment below.",source:"@site/docs/installation/server-with-kubernetes.md",sourceDirName:"installation",slug:"/installation/server-with-kubernetes",permalink:"/docs/installation/server-with-kubernetes",draft:!1,editUrl:"https://github.com/digitopvn/diginext-docs/tree/main/docs/installation/server-with-kubernetes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Server - With Docker Compose",permalink:"/docs/installation/server-with-docker-compose"},next:{title:"Server - Manual installation",permalink:"/docs/installation/server-manual-installation"}},l={},m=[{value:"Example with Podman builder (RECOMMENDED)",id:"example-with-podman-builder-recommended",level:2},{value:"Example with Docker builder (NOT RECOMMEND)",id:"example-with-docker-builder-not-recommend",level:2},{value:"Why this is NOT RECOMMEND?",id:"why-this-is-not-recommend",level:3},{value:"You need to understand the security risk: Security",id:"you-need-to-understand-the-security-risk-security",level:3}],p={toc:m},u="wrapper";function c(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"server---with-kubernetes"},"Server - With Kubernetes"),(0,r.kt)("p",null,"Take one of these example Kubernetes deployment below."),(0,r.kt)("h2",{id:"example-with-podman-builder-recommended"},"Example with Podman builder (RECOMMENDED)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# NAMESPACE CONFIGURATION\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: dx-server\n---\n# SERVICE CONFIGURATION\napiVersion: v1\nkind: Service\nmetadata:\n  name: dx-svc\n  namespace: dx-server\nspec:\n  ports:\n    - port: 6969\n  selector:\n    app: dx\n---\n# DEPLOYMENT CONFIGURATION\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: dx\n  namespace: dx-server\nspec:\n  replicas: 1\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      app: dx\n  template:\n    metadata:\n      labels:\n        app: dx\n    spec:\n      containers:\n        - name: dx\n          image: digitop/diginext-cli:latest\n          ports:\n            - containerPort: 6969\n          # Security for PODMAN to run in rootless mode\n          securityContext:\n            privileged: true\n            runAsUser: 1000\n            runAsGroup: 1000\n          # Required for PODMAN to run (kubectl apply -f 05-podman-fuse-device-plugin.yaml)\n          resources:\n            limits:\n              github.com/fuse: 1\n          env:\n            - name: PORT\n              value: "6969"\n            - name: NODE_ENV\n              value: production\n            - name: CLI_MODE\n              value: server\n            - name: BASE_URL\n              value: https://build.example.com\n            - name: MONGODB_CONNECTION_STRING\n              value: mongodb://...\n            - name: JWT_SECRET\n              value: # 64 random characters string\n            - name: JWT_EXPIRE_TIME\n              value: 48h\n            - name: GOOGLE_CLIENT_ID\n              value: ...\n            - name: GOOGLE_CLIENT_SECRET\n              value: ...\n            - name: BUILDER\n              value: podman\n            - name: LOG_DIR\n              value: /usr/diginext-cli/public/logs\n          volumeMounts:\n            - name: storage\n              mountPath: /var/app/storage\n            - name: logs\n              mountPath: /usr/diginext-cli/public/logs\n            - name: home\n              mountPath: /root\n      volumes:\n        - name: storage\n          hostPath:\n            path: /home/dev/diginext-cli/storage\n        - name: logs\n          hostPath:\n            path: /home/dev/diginext-cli/public/logs\n        - name: home\n          hostPath:\n            path: /home/dev/diginext-cli/storage/home\n')),(0,r.kt)("h2",{id:"example-with-docker-builder-not-recommend"},"Example with Docker builder (NOT RECOMMEND)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# SERVICE CONFIGURATION\napiVersion: v1\nkind: Service\nmetadata:\n  name: dx-svc\n  namespace: dx-server\nspec:\n  ports:\n    - port: 6969\n  selector:\n    app: dx\n---\n# POD DEPLOYMENT CONFIGURATION\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: dx\n  namespace: dx-server\nspec:\n  replicas: 3\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      app: dx\n  template:\n    metadata:\n      labels:\n        app: dx\n    spec:\n      containers:\n        - name: dx\n          image: digitop/diginext-cli:latest\n          ports:\n            - containerPort: 6969\n          securityContext:\n                        # THIS IS WHY I DON\'T RECOMMEND!!!\n            privileged: true\n            runAsUser: 0 \n          env:\n            - name: PORT\n              value: "6969"\n            - name: NODE_ENV\n              value: production\n            - name: CLI_MODE\n              value: server\n            - name: BASE_URL\n              value: https://your-domain.example\n            - name: MONGODB_CONNECTION_STRING\n              value: mongodb://...\n            - name: JWT_SECRET\n              value: # 64 random characters string\n            - name: JWT_EXPIRE_TIME\n              value: 48h\n            - name: GOOGLE_CLIENT_ID\n              value: ...\n            - name: GOOGLE_CLIENT_SECRET\n              value: ...\n            - name: LOG_DIR\n              value: /usr/diginext-cli/public/logs\n            - name: BUILDER\n              value: docker\n          volumeMounts:\n                        # THIS IS WHY I DON\'T RECOMMEND!!!\n            - name: docker-sock\n              mountPath: "/var/run/docker.sock"\n            - name: storage\n              mountPath: /var/app/storage\n            - name: logs\n              mountPath: /usr/diginext-cli/public/logs\n            - name: home\n              mountPath: /root\n      volumes:\n                # THIS IS WHY I DON\'T RECOMMEND!!!\n        - name: docker-sock\n          hostPath:\n            path: "/var/run/docker.sock"\n        - name: storage\n          hostPath:\n            path: /home/dev/diginext-cli/storage\n        - name: logs\n          hostPath:\n            path: /home/dev/diginext-cli/public/logs\n        - name: home\n          hostPath:\n            path: /home/dev/diginext-cli/storage/home\n')),(0,r.kt)("h3",{id:"why-this-is-not-recommend"},"Why this is NOT RECOMMEND?"),(0,r.kt)("p",null,"Take a look closely at the ",(0,r.kt)("inlineCode",{parentName:"p"},"securityContext")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"volumeMounts")," of the deployment, you will see it\u2019s mounting the ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/run/docker.sock")," at a host path into the container, then running it in ",(0,r.kt)("inlineCode",{parentName:"p"},"priviledged")," mode with ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," user. ",(0,r.kt)("strong",{parentName:"p"},"This is super dangerous!")),(0,r.kt)("h3",{id:"you-need-to-understand-the-security-risk-security"},"You need to understand the security risk: ",(0,r.kt)("a",{parentName:"h3",href:"/docs/security"},"Security")))}c.isMDXComponent=!0}}]);