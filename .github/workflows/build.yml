name: Test Workflow

# TRIGGERS
on:
  push:
    branches:
      - '*'             # matches every branch that doesn't contain a '/'
      - '*/*'           # matches every branch containing a single '/'
      - '**'            # matches every branch
      - "!main"         # exclude "main"
      - "!beta"         # exclude "beta"
      - "!prerelease"   # exclude "prerelease"

# ENVIRONMENT VARIABLES
env:
  GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
  BRANCH_NAME: ${{ github.head_ref || github.ref }} 

# CI/CD STEPS
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'ci(') == false
    
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install package dependencies
        run: pnpm install --no-frozen-lockfile

      # - name: Typecheck
      #   run: pnpm check-types

      - name: Run build
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        run: pnpm build